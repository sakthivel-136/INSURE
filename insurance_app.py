# -*- coding: utf-8 -*-
"""INSURANCE_APP

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S-lHfQWkuZ-Gj3M6C-Gz-qpFaD7HRdlV
"""

import streamlit as st
import numpy as np
import pickle

# -------------------- Load Model --------------------
@st.cache_resource
def load_model():
    with open('insurance_model.pkl', 'rb') as f:
        return pickle.load(f)

model = load_model()

# -------------------- Page Config --------------------
st.set_page_config(page_title="💼 Insurance Predictor", layout="centered", page_icon="💰")

# -------------------- Header & Animated Banner --------------------
st.markdown("""
    <style>
        .banner {
            background-color: #D1ECF1;
            color: #0C5460;
            padding: 10px;
            border-radius: 10px;
            text-align: center;
            animation: moveBanner 15s linear infinite;
        }
        @keyframes moveBanner {
            0% {transform: translateX(-100%);}
            50% {transform: translateX(0);}
            100% {transform: translateX(100%);}
        }
        .title {
            font-size: 48px;
            color: #4B8BBE;
            text-align: center;
        }
        .subtitle {
            font-size: 18px;
            color: #666;
            text-align: center;
            margin-bottom: 10px;
        }
    </style>
    <div class="title">💰 Insurance Charges Estimator</div>
    <div class="subtitle">Accurate predictions using AI - Powered by Linear Regression</div>
    <div class="banner">🏥 Predict Medical Charges Instantly | Developed by konjam_kadhalxx | Streamlit Pro UI 🌟</div>
""", unsafe_allow_html=True)

# -------------------- Input Form --------------------
with st.form("prediction_form", clear_on_submit=False):
    st.subheader("🧾 Enter Personal Information")

    col1, col2 = st.columns(2)

    with col1:
        age = st.slider("🎂 Age", 18, 100, 30)
        bmi = st.number_input("⚖️ BMI", min_value=10.0, max_value=50.0, value=25.0)
        children = st.number_input("👶 Number of Children", min_value=0, max_value=10, step=1)

    with col2:
        sex = st.radio("🧑 Sex", ['Male', 'Female'], horizontal=True)
        smoker = st.radio("🚬 Smoker", ['Yes', 'No'], horizontal=True)

    sex_encoded = 1 if sex == "Male" else 0
    smoker_encoded = 1 if smoker == "Yes" else 0

    submit = st.form_submit_button("🔍 Estimate Charges")

# -------------------- Prediction and Animation --------------------
if submit:
    data = np.array([[age, sex_encoded, bmi, children, smoker_encoded]])
    prediction = model.predict(data)[0]

    st.markdown("""
        <style>
        .runner {
            font-size: 36px;
            animation: run 2.5s linear forwards;
        }
        @keyframes run {
            0%   { margin-left: 0%; opacity: 0; }
            20%  { opacity: 1; }
            100% { margin-left: 90%; opacity: 0; }
        }
        </style>
        <div class='runner'>🏃‍♂️</div>
    """, unsafe_allow_html=True)

    st.success(f"💵 Estimated Charges: **${prediction:,.2f}**")

# -------------------- Chatbot Section --------------------
st.markdown("---")
st.subheader("💬 Insurance ChatBot Assistant")

qa_bank = {
    "What factors affect insurance charges?": "Age, sex, BMI, number of children, and smoking status.",
    "Is smoking really that bad for insurance?": "Yes, smokers often pay more than double in premiums.",
    "Does having children affect cost?": "Yes, more dependents can increase costs.",
    "Is this prediction 100% accurate?": "It's a close estimate based on real-world data.",
    "Why is my estimate high?": "Likely due to high BMI or being a smoker.",
    "Can I reduce charges?": "Yes, by maintaining a healthy lifestyle and quitting smoking.",
    "Is my data stored?": "No, your data is never stored. This is a demo tool."
}

if "chat" not in st.session_state:
    st.session_state.chat = []

user_q = st.text_input("Ask your question here...", placeholder="e.g., Does BMI affect insurance cost?")
if user_q:
    reply = qa_bank.get(user_q.strip(), "🤖 Sorry, I don't have that info yet.")
    st.session_state.chat.append((user_q, reply))

for q, a in st.session_state.chat:
    st.markdown(f"**🧑‍💼 You:** {q}")
    st.markdown(f"**🤖 Bot:** {a}")

# -------------------- FAQ Section --------------------
st.markdown("---")
with st.expander("📚 Frequently Asked Questions"):
    st.markdown("""
    **Q1:** _Why is my estimate high?_  
    → Likely due to high BMI or being a smoker.

    **Q2:** _Can I reduce charges?_  
    → Yes, by maintaining a healthy lifestyle and quitting smoking.

    **Q3:** _Is my data stored?_  
    → No, your data is never stored. This is a demo tool.
    """)

# -------------------- Footer --------------------
st.markdown("""
    <hr>
    <div style='text-align: center; color: grey; font-size: 13px;'>
        Created with ❤️ by <strong>konjam_kadhalxx</strong> | Using Streamlit, Python & Machine Learning
    </div>
""", unsafe_allow_html=True)
